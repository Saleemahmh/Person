{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "mcsaleem01:8080",
  "basePath": "/personApi",
  "tags": [
    {
      "name": "persons",
      "description": "Crud for Person Api",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/persons": {
      "post": {
        "tags": [
          "persons"
        ],
        "summary": "Add a new person ",
        "description": "",
        "operationId": "createPerson",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Person object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Persons"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
      },
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "list of persons ",
        "description": "",
        "operationId": "listofAllPersons",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
      }
    },
    "/persons/{id}": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Find person by ID",
        "description": "Returns a single person",
        "operationId": "getPerson",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Persons"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          }
        },
      },
      "put": {
        "tags": [
          "persons"
        ],
        "summary": "Update an existing pet",
        "description": "",
        "operationId": "updatePet",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Persons"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
      },
      "delete": {
        "tags": [
          "persons"
        ],
        "summary": "Deletes a person",
        "description": "",
        "operationId": "deletePerson",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Person id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          }
        },
      }
    },
  },
  "definitions": {
    "Persons": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        
        "city": {
          "type": "string"
        }
      },
    },
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}